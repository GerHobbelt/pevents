# Copyright (c) 2022 Mahmoud Al-Qudsi
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# This is a very basic `make` wrapper around the meson build toolchain, and can be
# copied as-is (only changing the value of OUTPUT below) for use in other projects.
#
# Supported arguments:
#   PREFIX: sets the installation prefix

# This should be any single file generated by the default build step
OUTPUT = build/pevents.hpp

MESON ?= meson
NINJA ?= ninja

prefix ?= /usr/local
PREFIX ?= $(prefix)

#### NO PER-PROJECT CHANGES NEEDED BELOW ###

all: .begin $(OUTPUT)

.PHONY: .begin
.begin:
	@which $(MESON) > /dev/null 2> /dev/null || \
		 (echo 'Please install meson and then re-run the `make` command!' 1>&2 && false)
	@which $(NINJA) > /dev/null 2> /dev/null || \
		 (echo 'Please install ninja and then re-run the `make` command!' 1>&2 && false)

.PHONY: build/ $(OUTPUT)
$(OUTPUT): build/build.ninja
	$(NINJA) -C build/

# Use build as an order-only dependency. This prevents the target from always being outdated
# after a make run, and more importantly, doesn't clobber manually specified meson options.
build/build.ninja: | build
	$(MESON) --buildtype=debugoptimized --prefix=$(PREFIX) build/

build:
	mkdir -p build/

.PHONY: clean
clean:
	rm -rf build/

.PHONY: test
test: build/fish
	$(NINJA) -C build/ test

.PHONY: install
install: $(OUTPUT)
	$(NINJA) -C build/ install
